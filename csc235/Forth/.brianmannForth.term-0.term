]0;~/csc235/Forth[01;34m~/csc235/Forth[00m$ ./gforth
Gforth 0.7.3, Copyright (C) 1995-2008 Free Software Foundation, Inc.
Gforth comes with ABSOLUTELY NO WARRANTY; for details type `license'
Type `bye' to exit
bbbybybyebyebye 
]0;~/csc235/Forth[01;34m~/csc235/Forth[00m$ ./gforth
Gforth 0.7.3, Copyright (C) 1995-2008 Free Software Foundation, Inc.
Gforth comes with ABSOLUTELY NO WARRANTY; for details type `license'
Type `bye' to exit
dddududupdupdup dup dup (dup (dup ( dup ( dup (  dup (  dup (  ndup (  ndup (  n dup (  n dup (  n -dup (  n -dup (  n --dup (  n --dup (  n --dup (  n -dup (  n --dup (  n dup (  n --dup (  ndup (  n --dup (  dup ( n --  dup ( n --dup ( n --ndup ( n --ndup ( n --  dup ( n --dup ( n -- dup ( n -- dup ( n -- ndup ( n -- ndup ( n -- n dup ( n -- n dup ( n -- n ndup ( n -- n ndup ( n -- n n dup ( n -- n n dup ( n -- n n )dup ( n -- n n )dup ( n -- n n ) 
:1: Stack underflow
>>>dup<<< ( n -- n n )
Backtrace:
111 1 1 21 21 2 1 2 1 2 31 2 31 2 3 1 2 3 1 2 3 +1 2 3 +1 2 3 ++1 2 3 ++1 2 3 ++ 1 2 3 ++ 1 2 3 ++ .1 2 3 ++ .1 2 3 ++ . 
:2: Undefined word
1 2 3 >>>++<<< .
Backtrace:
$7F9A71580A08 throw 
$7F9A71596C90 no.extensions 
$7F9A71580CC8 interpreter-notfound1 
11121212312312  121  11 1 1 21 21 2 1 2 1 2 31 2 31 2 3 1 2 3 1 2 3 +1 2 3 +1 2 3 + 1 2 3 + 1 2 3 + +1 2 3 + +1 2 3 + + 1 2 3 + + 1 2 3 + + .1 2 3 + + .1 2 3 + +   1 2 3 + + 1 2 3 + +   ok
... 6  ok
333 3 3 23 23 2 3 2 3 2 53 2 53 2 5 3 2 5 3 2 5 *3 2 5 *3 2 5 * 3 2 5 * 3 2 5 * +3 2 5 * +3 2 5 * +  ok
... 13  ok
    222 2 2 #2 #2   2 2 32 32 3 2 3 2 3 +2 3 +2 3 + 2 3 + 2 3 + 52 3 + 52 3 + 5 2 3 + 5 2 3 + 5 *2 3 + 5 *2 3 + 5 *  ok
... 25  ok
:::h:h:he:he:hel:hel:hell:hell:hello:hello:hello :hello :hello (:hello (:hello (-:hello (-:hello (--:hello (--:hello (--):hello (--):hello (--) :hello (--) :hello (--) 1:hello (--) 1:hello (--) 10:hello (--) 10:hello (--) 10 :hello (--) 10 :hello (--) 10 0:hello (--) 10 0:hello (--) 10 0 :hello (--) 10 0 :hello (--) 10 0 d:hello (--) 10 0 d:hello (--) 10 0 do:hello (--) 10 0 do:hello (--) 10 0 do :hello (--) 10 0 do :hello (--) 10 0 do h:hello (--) 10 0 do h:hello (--) 10 0 do hi:hello (--) 10 0 do hi:hello (--) 10 0 do hi :hello (--) 10 0 do hi :hello (--) 10 0 do hi l:hello (--) 10 0 do hi l:hello (--) 10 0 do hi lo:hello (--) 10 0 do hi lo:hello (--) 10 0 do hi loo:hello (--) 10 0 do hi loo:hello (--) 10 0 do hi loop:hello (--) 10 0 do hi loop:hello (--) 10 0 do hi loop::hello (--) 10 0 do hi loop::hello (--) 10 0 do hi loop  :hello (--) 10 0 do hi loop:hello (--) 10 0 do hi loop;:hello (--) 10 0 do hi loop;:hello (--) 10 0 do hi loop; 
:9: Undefined word
>>>:hello<<< (--) 10 0 do hi loop;
Backtrace:
$7F9A71580A08 throw 
$7F9A71596C90 no.extensions 
$7F9A71580CC8 interpreter-notfound1 
:::h:h:hi:hi:hi :hi :hi (:hi (:hi (-:hi (-:hi (--:hi (--:hi (--):hi (--):hi (--) :hi (--) :hi (--) c:hi (--) c:hi (--) cr:hi (--) cr:hi (--) cr.:hi (--) cr.:hi (--) cr.":hi (--) cr.":hi (--) cr."H:hi (--) cr."H:hi (--) cr."He:hi (--) cr."He:hi (--) cr."Hel:hi (--) cr."Hel:hi (--) cr."Hell:hi (--) cr."Hell:hi (--) cr."Hello:hi (--) cr."Hello:hi (--) cr."Hello :hi (--) cr."Hello :hi (--) cr."Hello W:hi (--) cr."Hello W:hi (--) cr."Hello Wo:hi (--) cr."Hello Wo:hi (--) cr."Hello Wor:hi (--) cr."Hello Wor:hi (--) cr."Hello Worl:hi (--) cr."Hello Worl:hi (--) cr."Hello World:hi (--) cr."Hello World:hi (--) cr."Hello World":hi (--) cr."Hello World":hi (--) cr."Hello World" :hi (--) cr."Hello World" :hi (--) cr."Hello World" c:hi (--) cr."Hello World" c:hi (--) cr."Hello World" cr:hi (--) cr."Hello World" cr:hi (--) cr."Hello World" cr;:hi (--) cr."Hello World" cr;:hi (--) cr."Hello World" cr; 
:10: Undefined word
>>>:hi<<< (--) cr."Hello World" cr;
Backtrace:
$7F9A71580A08 throw 
$7F9A71596C90 no.extensions 
$7F9A71580CC8 interpreter-notfound1 
:hi (--) cr."Hello World" cr;:hi (--) cr."Hello World" cr;:hi (--) cr."Hello World" cr:hi (--) cr."Hello World" cr;:hi (--) cr."Hello World" c:hi (--) cr."Hello World" cr;:hi (--) cr."Hello World" :hi (--) cr."Hello World" cr;:hi (--) cr."Hello World":hi (--) cr."Hello World" cr;:hi (--) cr."Hello World:hi (--) cr."Hello World" cr;:hi (--) cr."Hello Worl:hi (--) cr."Hello World" cr;:hi (--) cr."Hello Wor:hi (--) cr."Hello World" cr;:hi (--) cr."Hello Wo:hi (--) cr."Hello World" cr;:hi (--) cr."Hello W:hi (--) cr."Hello World" cr;:hi (--) cr."Hello :hi (--) cr."Hello World" cr;:hi (--) cr."Hello:hi (--) cr."Hello World" cr;:hi (--) cr."Hell:hi (--) cr."Hello World" cr;:hi (--) cr."Hel:hi (--) cr."Hello World" cr;:hi (--) cr."He:hi (--) cr."Hello World" cr;:hi (--) cr."H:hi (--) cr."Hello World" cr;:hi (--) cr.":hi (--) cr."Hello World" cr;:hi (--) cr.":hi (--) cr." Hello World" cr;:hi (--) cr." :hi (--) cr." Hello World" cr; 
:11: Undefined word
>>>:hi<<< (--) cr." Hello World" cr;
Backtrace:
$7F9A71580A08 throw 
$7F9A71596C90 no.extensions 
$7F9A71580CC8 interpreter-notfound1 
cccrcrcr.cr.cr. cr. cr. hcr. hcr. hecr. hecr. helcr. helcr. hellcr. hellcr. hellocr. hellocr. hellowcr. hellowcr. hellowocr. hellowocr. helloworcr. helloworcr. helloworlcr. helloworlcr. helloworldcr. helloworldcr. helloworld cr. helloworld cr. helloworld ccr. helloworld ccr. helloworld crcr. helloworld crcr. helloworld cr 
:12: Undefined word
>>>cr.<<< helloworld cr
Backtrace:
$7F9A71580A08 throw 
$7F9A71596C90 no.extensions 
$7F9A71580CC8 interpreter-notfound1 
cr. helloworld cr                 :hi (--) cr." Hello World" cr;:hi (--) cr." Hello World" cr;:hi (--) cr." Hello World" cr:hi (--) cr." Hello World" cr;:hi (--) cr." Hello World" c:hi (--) cr." Hello World" cr;:hi (--) cr." Hello World" :hi (--) cr." Hello World" cr;:hi (--) cr." Hello World":hi (--) cr." Hello World" cr;:hi (--) cr." Hello World:hi (--) cr." Hello World" cr;:hi (--) cr." Hello Worl:hi (--) cr." Hello World" cr;:hi (--) cr." Hello Wor:hi (--) cr." Hello World" cr;:hi (--) cr." Hello Wo:hi (--) cr." Hello World" cr;:hi (--) cr." Hello W:hi (--) cr." Hello World" cr;:hi (--) cr." Hello :hi (--) cr." Hello World" cr;:hi (--) cr." Hello:hi (--) cr." Hello World" cr;:hi (--) cr." Hell:hi (--) cr." Hello World" cr;:hi (--) cr." Hel:hi (--) cr." Hello World" cr;:hi (--) cr." He:hi (--) cr." Hello World" cr;:hi (--) cr." H:hi (--) cr." Hello World" cr;:hi (--) cr." :hi (--) cr." Hello World" cr;:hi (--) cr.":hi (--) cr." Hello World" cr;:hi (--) cr.:hi (--) cr." Hello World" cr;:hi (--) cr:hi (--) cr." Hello World" cr;:hi (--) c:hi (--) cr." Hello World" cr;:hi (--) :hi (--) cr." Hello World" cr;:hi (--):hi (--) cr." Hello World" cr;:hi (--:hi (--) cr." Hello World" cr;:hi (-:hi (--) cr." Hello World" cr;:hi (:hi (--) cr." Hello World" cr;:hi :hi (--) cr." Hello World" cr;:hi:hi (--) cr." Hello World" cr;:h:hi (--) cr." Hello World" cr;::hi (--) cr." Hello World" cr;:: hi (--) cr." Hello World" cr;: : hi (--) cr." Hello World" cr; 
:13: Undefined word
: hi >>>(--)<<< cr." Hello World" cr;
Backtrace:
$7F9A71580A08 throw 
$7F9A71596C18 no.extensions 
$7F9A71584340 compiler-notfound1 
cccrcrcr.cr.cr. cr. cr. "cr. "cr. "Hcr. "Hcr. "  cr. "cr. " cr. " cr. " Hcr. " Hcr. " Hecr. " Hecr. " Helcr. " Helcr. " Hellcr. " Hellcr. " Hellocr. " Hellocr. " Hellowcr. " Hellowcr. " Hellow cr. " Hellow cr. " Hellow Wcr. " Hellow Wcr. " Hellow Wocr. " Hellow Wocr. " Hellow Worcr. " Hellow Worcr. " Hellow Worlcr. " Hellow Worlcr. " Hellow Worldcr. " Hellow Worldcr. " Hellow World"cr. " Hellow World"cr. " Hellow World" cr. " Hellow World" cr. " Hellow World" ccr. " Hellow World" ccr. " Hellow World" crcr. " Hellow World" crcr. " Hellow World" cr 
:14: Undefined word
>>>cr.<<< " Hellow World" cr
Backtrace:
$7F9A71580A08 throw 
$7F9A71596C90 no.extensions 
$7F9A71580CC8 interpreter-notfound1 
cr. " Hellow World" cr                      : hi (--) cr." Hello World" cr;: hi (--) cr." Hello World" cr;: hi (--) cr." Hello World" cr: hi (--) cr." Hello World" cr;: hi (--) cr." Hello World" c: hi (--) cr." Hello World" cr;: hi (--) cr." Hello World" : hi (--) cr." Hello World" cr;: hi (--) cr." Hello World": hi (--) cr." Hello World" cr;: hi (--) cr." Hello World: hi (--) cr." Hello World" cr;: hi (--) cr." Hello Worl: hi (--) cr." Hello World" cr;: hi (--) cr." Hello Wor: hi (--) cr." Hello World" cr;: hi (--) cr." Hello Wo: hi (--) cr." Hello World" cr;: hi (--) cr." Hello W: hi (--) cr." Hello World" cr;: hi (--) cr." Hello : hi (--) cr." Hello World" cr;: hi (--) cr." Hello: hi (--) cr." Hello World" cr;: hi (--) cr." Hell: hi (--) cr." Hello World" cr;: hi (--) cr." Hel: hi (--) cr." Hello World" cr;: hi (--) cr." He: hi (--) cr." Hello World" cr;: hi (--) cr." H: hi (--) cr." Hello World" cr;: hi (--) cr." : hi (--) cr." Hello World" cr;: hi (--) cr.": hi (--) cr." Hello World" cr;: hi (--) cr.: hi (--) cr." Hello World" cr;: hi (--) cr: hi (--) cr ." Hello World" cr;: hi (--) cr : hi (--) cr ." Hello World" cr; 
:15: Undefined word
: hi >>>(--)<<< cr ." Hello World" cr;
Backtrace:
$7F9A71580A08 throw 
$7F9A71596C18 no.extensions 
$7F9A71584340 compiler-notfound1 
: hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello World" cr: hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello World" c: hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello World" : hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello World": hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello World: hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello Worl: hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello Wor: hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello Wo: hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello W: hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello : hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello: hi (--) cr ." Hello World" cr;: hi (--) cr ." Hell: hi (--) cr ." Hello World" cr;: hi (--) cr ." Hel: hi (--) cr ." Hello World" cr;: hi (--) cr ." He: hi (--) cr ." Hello World" cr;: hi (--) cr ." H: hi (--) cr ." Hello World" cr;: hi (--) cr ." : hi (--) cr ." Hello World" cr;: hi (--) cr .": hi (--) cr ." Hello World" cr;: hi (--) cr .: hi (--) cr ." Hello World" cr;: hi (--) cr : hi (--) cr ." Hello World" cr;: hi (--) cr: hi (--) cr ." Hello World" cr;: hi (--) c: hi (--) cr ." Hello World" cr;: hi (--) : hi (--) cr ." Hello World" cr;: hi (--): hi (--) cr ." Hello World" cr;: hi (--: hi (--) cr ." Hello World" cr;: hi (-: hi (-) cr ." Hello World" cr;  : hi (-: hi () cr ." Hello World" cr;  : hi (: hi () cr ." Hello World" cr; 
:16: Undefined word
: hi >>>()<<< cr ." Hello World" cr;
Backtrace:
$7F9A71580A08 throw 
$7F9A71596C18 no.extensions 
$7F9A71584340 compiler-notfound1 
: hi () cr ." Hello World" cr;: hi () cr ." Hello World" cr;: hi () cr ." Hello World" cr: hi () cr ." Hello World" cr;: hi () cr ." Hello World" c: hi () cr ." Hello World" cr;: hi () cr ." Hello World" : hi () cr ." Hello World" cr;: hi () cr ." Hello World": hi () cr ." Hello World" cr;: hi () cr ." Hello World: hi () cr ." Hello World" cr;: hi () cr ." Hello Worl: hi () cr ." Hello World" cr;: hi () cr ." Hello Wor: hi () cr ." Hello World" cr;: hi () cr ." Hello Wo: hi () cr ." Hello World" cr;: hi () cr ." Hello W: hi () cr ." Hello World" cr;: hi () cr ." Hello : hi () cr ." Hello World" cr;: hi () cr ." Hello: hi () cr ." Hello World" cr;: hi () cr ." Hell: hi () cr ." Hello World" cr;: hi () cr ." Hel: hi () cr ." Hello World" cr;: hi () cr ." He: hi () cr ." Hello World" cr;: hi () cr ." H: hi () cr ." Hello World" cr;: hi () cr ." : hi () cr ." Hello World" cr;: hi () cr .": hi () cr ." Hello World" cr;: hi () cr .: hi () cr ." Hello World" cr;: hi () cr : hi () cr ." Hello World" cr;: hi () cr: hi () cr ." Hello World" cr;: hi () c: hi () cr ." Hello World" cr;: hi () : hi () cr ." Hello World" cr;: hi (): hi () cr ." Hello World" cr;: hi (: hi () cr ." Hello World" cr;: hi : hi () cr ." Hello World" cr;: hi: hi () cr ." Hello World" cr;: hi (: hi ) cr ." Hello World" cr;  : hi : hi) cr ." Hello World" cr;  : hi): hi cr ." Hello World" cr;  : hi: hi cr ." Hello World" cr; 
:17: Undefined word
: hi cr ." Hello World" >>>cr;<<<
Backtrace:
$7F9A71580A08 throw 
$7F9A71596C18 no.extensions 
$7F9A71584340 compiler-notfound1 
: hi cr ." Hello World" cr;                           : hi () cr ." Hello World" cr;                              : hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello World" cr;: hi (--) cr ." Hello World" cr: hi (--) cr ." Hello World" cr ;: hi (--) cr ." Hello World" cr : hi (--) cr ." Hello World" cr ; 
:18: Undefined word
: hi >>>(--)<<< cr ." Hello World" cr ;
Backtrace:
$7F9A71580A08 throw 
$7F9A71596C18 no.extensions 
$7F9A71584340 compiler-notfound1 
: hi (--) cr ." Hello World" cr ;: hi (--) cr ." Hello World" cr ; 
:19: Undefined word
: hi >>>(--)<<< cr ." Hello World" cr ;
Backtrace:
$7F9A71580A08 throw 
$7F9A71596C18 no.extensions 
$7F9A71584340 compiler-notfound1 

]0;~/csc235/Forth[01;34m~/csc235/Forth[00m$ ./gforth
Gforth 0.7.3, Copyright (C) 1995-2008 Free Software Foundation, Inc.
Gforth comes with ABSOLUTELY NO WARRANTY; for details type `license'
Type `bye' to exit
: hi ( -- ) cr ." Hello World" cr ;: hi ( -- ) cr ." Hello World" cr ;: hi ( -- ) cr ." Hello World" cr ;  ok
::: : : e: e: ev: ev: eve: eve: even: even: even : even : even 2: even 2: even   : even : even d: even d: even du: even du: even dup: even dup: even dup : even dup : even dup 2: even dup 2: even dup 2 : even dup 2 : even dup 2 m: even dup 2 m: even dup 2 mo: even dup 2 mo: even dup 2 mod: even dup 2 mod: even dup 2 mod : even dup 2 mod : even dup 2 mod .: even dup 2 mod .: even dup 2 mod . : even dup 2 mod . : even dup 2 mod . ;: even dup 2 mod . ;: even dup 2 mod . ;  ok
::: : : c: c: co: co: col: col: coll: coll: colla: colla: collat: collat: collatz: collatz: collatz_: collatz_: collatz_s: collatz_s: collatz_st: collatz_st: collatz_ste: collatz_ste: collatz_step: collatz_step: collatz_step : collatz_step : collatz_step e: collatz_step e: collatz_step ev: collatz_step ev: collatz_step eve: collatz_step eve: collatz_step even: collatz_step even: collatz_step even : collatz_step even : collatz_step even i: collatz_step even i: collatz_step even if: collatz_step even if: collatz_step even if : collatz_step even if : collatz_step even if #: collatz_step even if #: collatz_step even if   : collatz_step even if : collatz_step even if 3: collatz_step even if 3: collatz_step even if 3 : collatz_step even if 3 : collatz_step even if 3 *: collatz_step even if 3 *: collatz_step even if 3 * : collatz_step even if 3 * : collatz_step even if 3 * 1: collatz_step even if 3 * 1: collatz_step even if 3 * 1 : collatz_step even if 3 * 1 : collatz_step even if 3 * 1 +: collatz_step even if 3 * 1 +: collatz_step even if 3 * 1 + : collatz_step even if 3 * 1 + : collatz_step even if 3 * 1 + e: collatz_step even if 3 * 1 + e: collatz_step even if 3 * 1 + el: collatz_step even if 3 * 1 + el: collatz_step even if 3 * 1 + els: collatz_step even if 3 * 1 + els: collatz_step even if 3 * 1 + else: collatz_step even if 3 * 1 + else: collatz_step even if 3 * 1 + else : collatz_step even if 3 * 1 + else : collatz_step even if 3 * 1 + else 2: collatz_step even if 3 * 1 + else 2: collatz_step even if 3 * 1 + else 2 : collatz_step even if 3 * 1 + else 2 : collatz_step even if 3 * 1 + else 2 /: collatz_step even if 3 * 1 + else 2 /: collatz_step even if 3 * 1 + else 2 / : collatz_step even if 3 * 1 + else 2 / : collatz_step even if 3 * 1 + else 2 / .: collatz_step even if 3 * 1 + else 2 / .: collatz_step even if 3 * 1 + else 2 / . : collatz_step even if 3 * 1 + else 2 / . : collatz_step even if 3 * 1 + else 2 / . ;: collatz_step even if 3 * 1 + else 2 / . ;: collatz_step even if 3 * 1 + else 2 / . ; 
:3: unstructured 
: collatz_step even if 3 * 1 + else 2 / . >>>;<<<
Backtrace:
$7F9A7FBF1990 throw 
$7F9A7FC01480 c(abort") 
$7F9A7FC0E4A0 def? 
$7F9A7FBFA860 ;-hook 
: collatz_step even if 3 * 1 + else 2 / . ;: collatz_step even if 3 * 1 + else 2 / . ;: collatz_step even if 3 * 1 + else 2 / . : collatz_step even if 3 * 1 + else 2 / . ;: collatz_step even if 3 * 1 + else 2 / .: collatz_step even if 3 * 1 + else 2 / .  ;: collatz_step even if 3 * 1 + else 2 / . : collatz_step even if 3 * 1 + else 2 / . t ;: collatz_step even if 3 * 1 + else 2 / . t: collatz_step even if 3 * 1 + else 2 / . th ;: collatz_step even if 3 * 1 + else 2 / . th: collatz_step even if 3 * 1 + else 2 / . the ;: collatz_step even if 3 * 1 + else 2 / . the: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2 / . then: collatz_step even if 3 * 1 + else 2 / . then  ;: collatz_step even if 3 * 1 + else 2 / . then : collatz_step even if 3 * 1 + else 2 / . then ;  : collatz_step even if 3 * 1 + else 2 / . then: collatz_step even if 3 * 1 + else 2 / . then ;  ok
: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2 / . then : collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2 / . then: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2 / . the: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2 / . th: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2 / . t: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2 / . : collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2 / .: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2 / : collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2 /: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2 : collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else 2: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else : collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + else: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + els: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + el: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + e: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 + : collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 +: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1 : collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * 1: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 * : collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 *: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3 : collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if 3: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if : collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even if: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even i: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even : collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step even: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step eve: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step ev: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step e: collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step : collatz_step even if 3 * 1 + else 2 / . then ;: collatz_step: collatz_step  even if 3 * 1 + else 2 / . then ;: collatz_step : collatz_step d even if 3 * 1 + else 2 / . then ;: collatz_step d: collatz_step du even if 3 * 1 + else 2 / . then ;: collatz_step du: collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup: collatz_step dup  even if 3 * 1 + else 2 / . then ;: collatz_step dup  even if 3 : collatz_step dup  even if 3 * 1 + else 2 / . then ;: collatz_step dup  even if 3: collatz_step dup  even if 3 * 1 + else 2 / . then ;: collatz_step dup  even if : collatz_step dup  even if 3 * 1 + else 2 / . then ;: collatz_step dup  even if: collatz_step dup  even if 3 * 1 + else 2 / . then ;: collatz_step dup  even i: collatz_step dup  even if 3 * 1 + else 2 / . then ;: collatz_step dup  even : collatz_step dup  even if 3 * 1 + else 2 / . then ;: collatz_step dup  even: collatz_step dup  even if 3 * 1 + else 2 / . then ;: collatz_step dup  eve: collatz_step dup  even if 3 * 1 + else 2 / . then ;: collatz_step dup  ev: collatz_step dup  even if 3 * 1 + else 2 / . then ;: collatz_step dup  e: collatz_step dup  even if 3 * 1 + else 2 / . then ;: collatz_step dup  : collatz_step dup even if 3 * 1 + else 2 / . then ;  : collatz_step dup : collatz_step dup even if 3 * 1 + else 2 / . then ; redefined collatz_step   ok
: collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup even if 3 * 1 + else 2 / . then : collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup even if 3 * 1 + else 2 / . then: collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup even if 3 * 1 + else 2 / . the: collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup even if 3 * 1 + else 2 / . th: collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup even if 3 * 1 + else 2 / . t: collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup even if 3 * 1 + else 2 / . : collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup even if 3 * 1 + else 2 / .: collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup even if 3 * 1 + else 2 / : collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup even if 3 * 1 + else 2 /: collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup even if 3 * 1 + else 2 : collatz_step dup even if 3 * 1 + else 2 / . then ;: collatz_step dup even if 3 * 1 + else 2 : collatz_step dup even if 3 * 1 + else 2/ . then ;  : collatz_step dup even if 3 * 1 + else 2/: collatz_step dup even if 3 * 1 + else 2 . then ;  : collatz_step dup even if 3 * 1 + else 2: collatz_step dup even if 3 * 1 + else  . then ;  : collatz_step dup even if 3 * 1 + else : collatz_step dup even if 3 * 1 + else 3 . then ;: collatz_step dup even if 3 * 1 + else 3: collatz_step dup even if 3 * 1 + else 3  . then ;: collatz_step dup even if 3 * 1 + else 3 : collatz_step dup even if 3 * 1 + else 3 * . then ;: collatz_step dup even if 3 * 1 + else 3 *: collatz_step dup even if 3 * 1 + else 3 *  . then ;: collatz_step dup even if 3 * 1 + else 3 * : collatz_step dup even if 3 * 1 + else 3 * 1 . then ;: collatz_step dup even if 3 * 1 + else 3 * 1: collatz_step dup even if 3 * 1 + else 3 * 1  . then ;: collatz_step dup even if 3 * 1 + else 3 * 1 : collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + else 3 * 1 +: collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + else 3 * 1 : collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + else 3 * 1: collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + else 3 * : collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + else 3 *: collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + else 3 : collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + else 3: collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + else : collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + else: collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + els: collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + el: collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + e: collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 + : collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 +: collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 : collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1: collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * : collatz_step dup even if 3 * 1 + else 3 * 1 + . then ;: collatz_step dup even if 3 * 1 : collatz_step dup even if 3 * 1+ else 3 * 1 + . then ;  : collatz_step dup even if 3 * 1: collatz_step dup even if 3 * + else 3 * 1 + . then ;  : collatz_step dup even if 3 * : collatz_step dup even if 3 *+ else 3 * 1 + . then ;  : collatz_step dup even if 3 *: collatz_step dup even if 3 + else 3 * 1 + . then ;  : collatz_step dup even if 3 : collatz_step dup even if 3+ else 3 * 1 + . then ;  : collatz_step dup even if 3: collatz_step dup even if + else 3 * 1 + . then ;  : collatz_step dup even if +: collatz_step dup even if  else 3 * 1 + . then ;  : collatz_step dup even if : collatz_step dup even if 2 else 3 * 1 + . then ;: collatz_step dup even if 2: collatz_step dup even if 2  else 3 * 1 + . then ;: collatz_step dup even if 2 : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . then ; redefined collatz_step   ok
: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . then : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . then: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . the: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . th: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . t: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + .: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 +: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 *: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / els: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / el: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / e: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 /: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even i: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even: collatz_step dup even  if 2 / else 3 * 1 + . then ;: collatz_step dup even : collatz_step dup even - if 2 / else 3 * 1 + . then ;: collatz_step dup even -: collatz_step dup even -1 if 2 / else 3 * 1 + . then ;: collatz_step dup even -1: collatz_step dup even -1  if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 : collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 *: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ; redefined collatz_step   ok
: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * 1 + . then : collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * 1 + . then: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * 1 + . the: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * 1 + . th: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * 1 + . t: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * 1 + . : collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * 1 + .: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * 1 + : collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * 1 +: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * 1 : collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * 1: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 * : collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 *: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3 : collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else 3: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else : collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / else: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / els: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / el: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / e: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 / : collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 /: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2 : collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if 2: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if : collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * if: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * i: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 * : collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 *: collatz_step dup even -1 * if 2 / else 3 * 1 + . then ;: collatz_step dup even -1 *: collatz_step dup even -1  if 2 / else 3 * 1 + . then ;  : collatz_step dup even -1 : collatz_step dup even -1 if 2 / else 3 * 1 + . then ;  : collatz_step dup even -1: collatz_step dup even - if 2 / else 3 * 1 + . then ;  : collatz_step dup even -: collatz_step dup even  if 2 / else 3 * 1 + . then ;  : collatz_step dup even : collatz_step dup even 0 if 2 / else 3 * 1 + . then ;: collatz_step dup even 0: collatz_step dup even 0  if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 : collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 =: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ; redefined collatz_step   ok
: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * 1 + . then : collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * 1 + . then: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * 1 + . the: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * 1 + . th: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * 1 + . t: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * 1 + . : collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * 1 + .: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * 1 + : collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * 1 +: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * 1 : collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * 1: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 * : collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 *: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3 : collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else 3: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else : collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / else: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / els: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / el: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / e: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 / : collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 /: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2 : collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if 2: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if : collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = if: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = i: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 = : collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 =: collatz_step dup even 0 = if 2 / else 3 * 1 + . then ;: collatz_step dup even 0 =: collatz_step dup even 0  if 2 / else 3 * 1 + . then ;  : collatz_step dup even 0 : collatz_step dup even 0 if 2 / else 3 * 1 + . then ;  : collatz_step dup even 0: collatz_step dup even  if 2 / else 3 * 1 + . then ;  : collatz_step dup even : collatz_step dup even if 2 / else 3 * 1 + . then ;  : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . then ; redefined collatz_step   ok
33313131  ok
33323232  ok
cccococolcolcollcollcollacollacollatcollatcollatzcollatzcollatz_collatz_collatz_scollatz_scollatz_stcollatz_stcollatz_stecollatz_stecollatz_stepcollatz_stepcollatz_step 0  ok
...s.s.s <2> 31 16  ok
... 16  ok
. .s  collatz_stepcollatz_step 1  ok
collatz_step            . .s.s <1> 15  ok
::: : : e: e: ec: ec: e  : e: ev: ev: eve: eve: even: even: even : even : even d: even d: even du: even du: even dup: even dup: even dup : even dup : even dup 2: even dup 2: even dup 2 : even dup 2 : even dup 2 o: even dup 2 o: even dup 2 od: even dup 2 od: even dup 2 o  : even dup 2 o: even dup 2   : even dup 2 : even dup 2 m: even dup 2 m: even dup 2 mo: even dup 2 mo: even dup 2 mod: even dup 2 mod: even dup 2 mod : even dup 2 mod : even dup 2 mod ;: even dup 2 mod ;: even dup 2 mod ; redefined even   ok
: even dup 2 mod ;                  .s  collatz_step            . .s  collatz_step            32  31  : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . then ; redefined collatz_step   ok
: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . then : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . then: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . the: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . th: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . t: collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + . : collatz_step dup even if 2 / else 3 * 1 + . then ;: collatz_step dup even if 2 / else 3 * 1 + .: collatz_step dup even if 2 / else 3 * 1 +  then ;  : collatz_step dup even if 2 / else 3 * 1 + : collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / else 3 * 1 +: collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / else 3 * 1 : collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / else 3 * 1: collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / else 3 * : collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / else 3 *: collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / else 3 : collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / else 3: collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / else : collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / else: collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / els: collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / el: collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / e: collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 / : collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 /: collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2 : collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if 2: collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if : collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even if: collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even i: collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even : collatz_step dup even if 2 / else 3 * 1 +  then ;: collatz_step dup even: collatz_step dup even  if 2 / else 3 * 1 +  then ;: collatz_step dup even : collatz_step dup even 0 if 2 / else 3 * 1 +  then ;: collatz_step dup even 0: collatz_step dup even 0  if 2 / else 3 * 1 +  then ;: collatz_step dup even 0 : collatz_step dup even 0 = if 2 / else 3 * 1 +  then ;: collatz_step dup even 0 =: collatz_step dup even 0 = if 2 / else 3 * 1 +  then ; redefined collatz_step   ok
::: : : f: f: fa: fa: fac: fac: fac : fac : fac 1: fac 1: fac 1 : fac 1 : fac 1 =: fac 1 =: fac 1 = : fac 1 = : fac 1 = i: fac 1 = i: fac 1 = if: fac 1 = if: fac 1 = if : fac 1 = if : fac 1 = if .: fac 1 = if .: fac 1 = if . : fac 1 = if . : fac 1 = if . e: fac 1 = if . e: fac 1 = if . el: fac 1 = if . el: fac 1 = if . els: fac 1 = if . els: fac 1 = if . else: fac 1 = if . else: fac 1 = if . else : fac 1 = if . else : fac 1 = if . else c: fac 1 = if . else c: fac 1 = if . else co: fac 1 = if . else co: fac 1 = if . else col: fac 1 = if . else col: fac 1 = if . else coll: fac 1 = if . else coll: fac 1 = if . else colla: fac 1 = if . else colla: fac 1 = if . else collat: fac 1 = if . else collat: fac 1 = if . else collatz: fac 1 = if . else collatz: fac 1 = if . else collatz : fac 1 = if . else collatz : fac 1 = if . else collatz s: fac 1 = if . else collatz s: fac 1 = if . else collatz st: fac 1 = if . else collatz st: fac 1 = if . else collatz ste: fac 1 = if . else collatz ste: fac 1 = if . else collatz step: fac 1 = if . else collatz step: fac 1 = if . else collatz ste  : fac 1 = if . else collatz ste: fac 1 = if . else collatz st  : fac 1 = if . else collatz st: fac 1 = if . else collatz s  : fac 1 = if . else collatz s: fac 1 = if . else collatz   : fac 1 = if . else collatz : fac 1 = if . else collatz  : fac 1 = if . else collatz: fac 1 = if . else collatz_: fac 1 = if . else collatz_: fac 1 = if . else collatz_s: fac 1 = if . else collatz_s: fac 1 = if . else collatz_st: fac 1 = if . else collatz_st: fac 1 = if . else collatz_ste: fac 1 = if . else collatz_ste: fac 1 = if . else collatz_step: fac 1 = if . else collatz_step: fac 1 = if . else collatz_step : fac 1 = if . else collatz_step : fac 1 = if . else collatz_step t: fac 1 = if . else collatz_step t: fac 1 = if . else collatz_step th: fac 1 = if . else collatz_step th: fac 1 = if . else collatz_step the: fac 1 = if . else collatz_step the: fac 1 = if . else collatz_step then: fac 1 = if . else collatz_step then: fac 1 = if . else collatz_step then : fac 1 = if . else collatz_step then : fac 1 = if . else collatz_step then r: fac 1 = if . else collatz_step then r: fac 1 = if . else collatz_step then re: fac 1 = if . else collatz_step then re: fac 1 = if . else collatz_step then rec: fac 1 = if . else collatz_step then rec: fac 1 = if . else collatz_step then recu: fac 1 = if . else collatz_step then recu: fac 1 = if . else collatz_step then recur: fac 1 = if . else collatz_step then recur: fac 1 = if . else collatz_step then recurs: fac 1 = if . else collatz_step then recurs: fac 1 = if . else collatz_step then recurse: fac 1 = if . else collatz_step then recurse: fac 1 = if . else collatz_step then recurse : fac 1 = if . else collatz_step then recurse : fac 1 = if . else collatz_step then recurse :: fac 1 = if . else collatz_step then recurse :: fac 1 = if . else collatz_step then recurse   : fac 1 = if . else collatz_step then recurse : fac 1 = if . else collatz_step then recurse ;: fac 1 = if . else collatz_step then recurse ;: fac 1 = if . else collatz_step then recurse ;  ok
: fac 1 = if . else collatz_step then recurse ;: fac 1 = if . else collatz_step then recurse ;: fac 1 = if . else collatz_step then recurse : fac 1 = if . else collatz_step then recurse ;: fac 1 = if . else collatz_step then recurse: fac 1 = if . else collatz_step then recurse ;: fac 1 = if . else collatz_step then recurse: fac 1 = if . else collatz_step then recurs ;  : fac 1 = if . else collatz_step then recurs: fac 1 = if . else collatz_step then recur ;  : fac 1 = if . else collatz_step then recur: fac 1 = if . else collatz_step then recu ;  : fac 1 = if . else collatz_step then recu: fac 1 = if . else collatz_step then rec ;  : fac 1 = if . else collatz_step then rec: fac 1 = if . else collatz_step then re ;  : fac 1 = if . else collatz_step then re: fac 1 = if . else collatz_step then r ;  : fac 1 = if . else collatz_step then r: fac 1 = if . else collatz_step then  ;  : fac 1 = if . else collatz_step then : fac 1 = if . else collatz_step then ;  : fac 1 = if . else collatz_step then: fac 1 = if . else collatz_step the ;  : fac 1 = if . else collatz_step the: fac 1 = if . else collatz_step th ;  : fac 1 = if . else collatz_step th: fac 1 = if . else collatz_step t ;  : fac 1 = if . else collatz_step t: fac 1 = if . else collatz_step  ;  : fac 1 = if . else collatz_step : fac 1 = if . else collatz_step ;  : fac 1 = if . else collatz_step: fac 1 = if . else collatz_ste ;  : fac 1 = if . else collatz_ste: fac 1 = if . else collatz_st ;  : fac 1 = if . else collatz_st: fac 1 = if . else collatz_s ;  : fac 1 = if . else collatz_s: fac 1 = if . else collatz_ ;  : fac 1 = if . else collatz_: fac 1 = if . else collatz ;  : fac 1 = if . else collatz: fac 1 = if . else collat ;  : fac 1 = if . else collat: fac 1 = if . else colla ;  : fac 1 = if . else colla: fac 1 = if . else coll ;  : fac 1 = if . else coll: fac 1 = if . else col ;  : fac 1 = if . else col: fac 1 = if . else co ;  : fac 1 = if . else co: fac 1 = if . else c ;  : fac 1 = if . else c: fac 1 = if . else  ;  : fac 1 = if . else : fac 1 = if . else ;  : fac 1 = if . else: fac 1 = if . els ;  : fac 1 = if . els: fac 1 = if . el ;  : fac 1 = if . el: fac 1 = if . e ;  : fac 1 = if . e: fac 1 = if .  ;  : fac 1 = if . : fac 1 = if . ;  : fac 1 = if .: fac 1 = if  ;  : fac 1 = if : fac 1 = if ;  : fac 1 = if: fac 1 = i ;  : fac 1 = i: fac 1 =  ;  : fac 1 = : fac 1 = ;  : fac 1 =: fac 1  ;  : fac 1 : fac 1 ;  : fac 1: fac  ;  : fac : fac d ;: fac d: fac du ;: fac du: fac dup ;: fac dup: fac dup  ;: fac dup : fac dup 1 ;: fac dup 1: fac dup 1  ;: fac dup 1 : fac dup 1 - ;: fac dup 1 -: fac dup 1 -  ;: fac dup 1 - : fac dup 1 - * ;: fac dup 1 - *: fac dup 1 - *  ;: fac dup 1 - * : fac dup 1 - * r ;: fac dup 1 - * r: fac dup 1 - * re ;: fac dup 1 - * re: fac dup 1 - * rec ;: fac dup 1 - * rec: fac dup 1 - * recu ;: fac dup 1 - * recu: fac dup 1 - * recur ;: fac dup 1 - * recur: fac dup 1 - * recurs ;: fac dup 1 - * recurs: fac dup 1 - * recurse ;: fac dup 1 - * recurse: fac dup 1 - * recurse  ;: fac dup 1 - * recurse : fac dup 1 - * recurse ;  : fac dup 1 - * recurse: fac dup 1 - * recurse ; redefined fac   ok
