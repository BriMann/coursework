<!-- DO NOT EDIT THIS FILE -->

<h1>Problem Set 01</h1>

<h2>
  Due: January 29
</h2>

<p><strong><em>General instructions: please read carefully</em></strong>. When you are writing these programs, focus first on the most important behavior, the conversions themselves. Do not waste time trying to account for user mistakes. Assume that users of your program will not enter bad values. The point of the assignment isn't to write a nice user interface or handle every possible kind of input, it's to implement the algorithms for conversion. Get the values right first, then worry about making your output look like the sample, handling spaces in input, capitalization, etc. Give your files names like <tt>Problem01.py</tt>, <tt>Problem02.cpp</tt>, etc., and please
only use the <tt>.py</tt> and <tt>.cpp</tt> file extensions.</p>

<p><strong><em>Program intelligently and comment thoughtfully.</em></strong>
Make as much of your program obvious as you can. Choose descriptive variable
names like <code>value_to_convert</code> or <code>output_string</code> instead
of <code>x</code> or <code>integer</code> (my pet peeve). The longer a
variable's scope, the more important its choice of name. You can still use short
names like <code>i</code> or <code>n</code> for loop control variables and the
like. For things that are still not so obvious, use comments to clarify. Useful
comments explain things about the code that aren't obvious. Do not waste time
explaining the obvious.</p>

<p><strong><em>Ask questions early</em></strong>. Programs always take more
time to debug than you think they will. So start early, make some mistakes, get
stuck, and get some help before you are pressed for time.</p>

<p>Finally, a reminder about <strong><em>academic integrity</em></strong>. It is
not a gray area. It is legit to ask other students or me about the assignment.
It is legit to write pseudocode together. It is not legit to write actual code
together, or to share your code with another student, for this assignment. This
assignment will have an optional second phase in which you may choose to
collaborate with another student on improving your solutions together.</p>
  
<p><strong><em>Taking code from other sources is not permitted</em></strong> on
these assignments. You need to understand this: the point isn't really for you
to have the working program. There are apps already that can do the things your
programs will do. The point is the process of writing the code yourself. That
process will clarify the algorithms for you, and that is why I am assigning
these problems. Taking code from other solutions, or even reading solutions to
this well-known problem, subverts the purpose of the assignment, so please don't
do these things.</p>

<ol> 
  
  <li><p>Write a program that reads a hexadecimal string from the keyboard,
converts it to binary with no input validation (just crash if the user types the
wrong thing), and displays some output. A sample is displayed below. In the
sample, user-typed text is displayed in purple. Program-provided output is
displayed in black. (Please contact instructor if you cannot see the color
difference. It is hard for me to know which colors are hard to see for
whom.)</p>

  <pre><code>Please input a hexadecimal bit string (do not use a 0x prefix): <span style="color:purple">feedbeef</span>
You entered: feedbeef
The binary equivalent is: 1111 1110 1110 1101 1011 1110 1110 1111
Thanks for playing! Bye.
</code></pre></li>
<li><p>Write a program that reads a binary string from the keyboard, converts it to hexadecimal with no input validation (just crash if the user types the wrong thing), and displays output like in the sample below. In the sample, user-typed text is purple, and program-provided text is black. (Please contact instructor if you can't see the color difference.)</p>

  <pre><code>Please enter a binary string (no 0b prefix, spaces are ignored): <span style="color:purple">1001 0110 1010 0101</span>
You entered: 1001 0110 1010 0101
Hex equivalent: 96A5
Want to do another (y/n)? <span style="color:purple">y</span>
Please enter a binary string (no 0b prefix, spaces are ignored): <span style="color:purple">1100 1010 1011 0000 0000 0101 1110</span>
You entered: 1100 1010 1011 0000 0000 1101 0001 1110
Hex equivalent: CAB005E
Want to do another (y/n)? <span style="color:purple">n</span>
</code></pre></li>
<li><p>Write a program that presents the user with a menu allowing them to select either decimal-to-binary conversion, binary-to-decimal conversion, or quit. After the calculation is complete, the menu is shown again, the cycle repeating until quit is selected. A sample session is shown below.</p>

<pre><code>1) Convert binary to decimal
2) Convert decimal to binary
3) Quit
Please select from 1-3: <span style="color:purple">1</span>
Enter a bit string to convert to decimal: <span style="color:purple">10010110</span>
You entered: 10010110
Decimal value: 150

1) Convert binary to decimal
2) Convert decimal to binary
3) Quit
Please select from 1-3: <span style="color:purple">2</span>
Enter a nonnegative integer to convert to binary: <span style="color:purple">123456789</span>
You entered: 123456789
Binary equivalent: 111010110111100110100010101
Do another (y/n)? <span style="color:purple">y</span>

1) Convert binary to decimal
2) Convert decimal to binary
3) Quit
Please select from 1-3: <span style="color:purple">1</span>
Enter a bit string to convert to decimal: <span style="color:purple">3</span>
You entered: 3
Decimal value: 0

1) Convert binary to decimal
2) Convert decimal to binary
3) Quit
Please select from 1-3: 3
</code></pre></li>
</ol>
